<div class="stars">
  <div class="row">
    <div>
      <h2>Where is the ISS right now?</h2>
      <p>
        This data is from the <a href="http://open-notify.org/Open-Notify-API/">ISS</a> API showing you where the ISS is at this very moment.
        <button class="updateLocation">Update ISS</button>
      </p>
      <div class="location">
        <div class="map"></div>
        <img class="map-image" src="/assets/icon-iss.png"></img>
      </div>
      <div class="overhead">
        <h3 class="caption2 hvr-fade">The ISS will pass over your head on:</h3>
        <ul class="passes"></ul>
      </div>
    </div>
  </div>
</div>

<% content_for :footer do %>
  <script>
    var map;

    function overheadPasses(latitude, longitude) {
      $.getJSON("/api/overhead?latitude=" + latitude + "&longitude=" + longitude, function(data) {
        data['response'].forEach(function (d) {
          var date = new Date(d["risetime"]*1000);
          $(".overhead .passes").append("<li>" + date.toLocaleString() + "</li>");
        });
      });
    }

    function drawISSLocation() {
      $.getJSON("/api/location", function(data) {
        var latitude = data["iss_position"]["latitude"];
        var longitude = data["iss_position"]["longitude"];

        // Create a map object and specify the DOM element for display.
        window.map = new google.maps.Map($('.location .map')[0], {
          center: {lat: latitude, lng: longitude},
          mapTypeId: google.maps.MapTypeId.SATELLITE,
          scrollwheel: false,
          zoom: 4
        });
      });
    }

    function centerISS() {
      $.getJSON("/api/location", function(data) {
        var latitude = data["iss_position"]["latitude"];
        var longitude = data["iss_position"]["longitude"];
        window.map.panTo({lat: latitude, lng: longitude});
      });
    }

    function drawOverheadPasses() {
      if ("geolocation" in navigator) {
        navigator.geolocation.getCurrentPosition(function(position) {
          var latitude  = position.coords.latitude;
          var longitude = position.coords.longitude;

          overheadPasses(latitude, longitude);
        }, function () {
          console.log("geolocating failed", args);
        });
      } else {
        console.log("geolocation not available")
      }
    }

    $(document).ready(function() {
      drawOverheadPasses();

      $(".updateLocation").on("click", centerISS);
    });
  </script>
  <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyACLKUzrOI-8UQgbMLxGKEKYf9ikznOxNg&callback=drawISSLocation">
  </script>

<% end %>

<!--

Kata Name Idea: Many Calls to View the Sky
===============

EvalError: Raised when the eval() functions is used in an incorrect manner.

RangeError: Raised when a numeric variable exceeds its allowed range.

ReferenceError: Raised when an invalid reference is used.

SyntaxError: Raised when a syntax error occurs while parsing JavaScript code.

TypeError: Raised when the type of a variable is not as expected.

URIError: Raised when the encodeURI() or decodeURI() functions are used in an incorrect manner.

-->